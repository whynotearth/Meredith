# https://docs.microsoft.com/azure/devops/pipelines/yaml-schema

pr: none
trigger:
  batch: true
  branches:
    include:
      - master
      - staging

variables:
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: CustomVersion
  value: $(GitBuildVersionSimple).$(Build.BuildId)
- name: Enviroment
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    value: 'Production'
  ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
    value: 'Staging'

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore dotnet tools'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'Format'
  inputs:
    command: 'custom'
    custom: 'format'
    arguments: '--check --verbosity diagnostic'

# We had a sudden build fail:
# error NU1101: Unable to find package ''. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages
# This seems to be the fix
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: test
    projects: '*Tests/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Check Swagger'
  inputs:
    command: 'custom'
    custom: 'swagger'
    arguments: 'tofile --output WhyNotEarth.Meredith.App\bin\Debug\netcoreapp3.1\swagger.json WhyNotEarth.Meredith.App\bin\Release\netcoreapp3.1\WhyNotEarth.Meredith.App.dll v0'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '--configuration Release --output published-app /p:EnvironmentName=$(Enviroment) --runtime win-x64 --self-contained true'
    zipAfterPublish: false

- task: NuGetCommand@2
  displayName: 'Create Octopus package'
  inputs:
    command: pack
    packagesToPack: 'WhyNotEarth.Meredith.App/WhyNotEarth.Meredith.App.nuspec'
    packDestination: 'OctopusPackages'
    buildProperties: 'version=$(CustomVersion)'

- task: NuGetCommand@2
  displayName: 'Push NuGet package to Octopus feed'
  inputs:
    command: push
    packagesToPush: 'OctopusPackages/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'meredith-core/OctopusDeployFeed'

- task: OctopusCreateRelease@3
  displayName: 'Create Octopus Release'
  inputs:
    OctoConnectedServiceName: 'OctopusServer'
    ProjectName: 'Meredith'
    ReleaseNumber: '$(CustomVersion)'
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      Channel: 'production'
    ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
      Channel: 'Default'
    AdditionalArguments: "--packageversion=$(CustomVersion)"